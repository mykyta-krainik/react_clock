{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","getCurrentTime","prevProps","oldClockName","clockName","newClockName","props","debug","clearInterval","toUTCString","slice","className","Component","getRandomName","value","now","toString","App","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZN,KAAM,IAAIC,OAGZG,OAAOG,QAAQC,KAAK,EAAKC,oBACxB,OAdP,gCAiBE,SAAmBC,GACjB,IAAmBC,EAAiBD,EAA5BE,UACWC,EAAiBV,KAAKW,MAAjCF,UAEJD,IAAiBE,GACnBT,OAAOG,QAAQQ,MAAf,uBAAqCJ,EAArC,eAAwDE,MAtB9D,kCA0BE,WACEG,cAAcb,KAAKD,WA3BvB,4BA8BE,WACE,OAAOC,KAAKJ,MAAMC,KAAKiB,cAAcC,OAAO,IAAK,KA/BrD,oBAkCE,WACE,IAAQN,EAAcT,KAAKW,MAAnBF,UAER,OACE,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,IAGF,YAED,sBAAMO,UAAU,cAAhB,SACGhB,KAAKM,0BA9ChB,GAA2BW,a,MCJ3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAQX,IAAMG,EAAb,4MACE1B,MAAyB,CACvB2B,UAAU,EACVd,UAAW,WAHf,EAMEV,QAAU,EANZ,EA0BEyB,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKvB,SAAS,CACZoB,UAAU,KA9BhB,EAkCEI,UAAY,WACV,EAAKxB,SAAS,CACZoB,UAAU,KApChB,uDAQE,WAA2B,IAAD,OACxBK,SAASC,iBAAiB,cAAe7B,KAAKwB,WAC9CI,SAASC,iBAAiB,QAAS7B,KAAK2B,WAExC3B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZM,UAAWS,QAEZ,QAhBP,kCAmBE,WACEU,SAASE,oBAAoB,cAAe9B,KAAKwB,WACjDI,SAASE,oBAAoB,QAAS9B,KAAK2B,WAE3Cd,cAAcb,KAAKD,WAvBvB,oBAwCE,WACE,MAAgCC,KAAKJ,MAA7B2B,EAAR,EAAQA,SAAUd,EAAlB,EAAkBA,UAElB,OACE,sBAAKO,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOd,UAAWA,WA/CvC,GAAyBQ,aCdzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.afd27040.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n\n      window.console.info(this.getCurrentTime());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { clockName: oldClockName } = prevProps;\n    const { clockName: newClockName } = this.props;\n\n    if (oldClockName !== newClockName) {\n      window.console.debug(`Renamed from ${oldClockName} to ${newClockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  getCurrentTime(): string {\n    return this.state.date.toUTCString().slice(-12, -4);\n  }\n\n  render(): JSX.Element {\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getCurrentTime()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\n\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n\n    clearInterval(this.timerId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render(): JSX.Element {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}